syntax = "proto3";

package cosmos.v1;

option go_package = "github.com/figment-networks/tendermint-protobuf-def/cosmos";

import "t.v1.proto";
import "gogo.proto";
import "google/protobuf/descriptor.proto";

enum SignMode {
  SIGN_MODE_UNSPECIFIED       = 0;
  SIGN_MODE_DIRECT            = 1;
  SIGN_MODE_TEXTUAL           = 2;
  SIGN_MODE_DIRECT_AUX        = 3;
  SIGN_MODE_LEGACY_AMINO_JSON = 127;
}

message Tx {
  TxBody         body       = 1;
  AuthInfo       auth_info  = 2;
  repeated bytes signatures = 3;
}

message TxBody {
  repeated Any messages                       = 1;
  string       memo                           = 2;
  uint64       timeout_height                 = 3;
  repeated Any extension_options              = 1023;
  repeated Any non_critical_extension_options = 2047;
}

message AuthInfo {
  repeated SignerInfo signer_infos = 1;
  Fee                 fee          = 2;
  Tip                 tip          = 3;
}

message SignerInfo {
  Any      public_key = 1;
  ModeInfo mode_info  = 2;
  uint64   sequence   = 3;
}

message ModeInfo {
  oneof sum {
    Single single = 1;
    Multi  multi  = 2;
  }
}

message Single {
  SignMode mode = 1;
}

message Multi {
  CompactBitArray   bitarray   = 1;
  repeated ModeInfo mode_infos = 2;
}

// cosmos.crypto.multisig.v1beta1.CompactBitArray
message CompactBitArray {
  uint32 extra_bits_stored = 1;
  bytes  elems             = 2;
}

message Fee {
  repeated Coin amount = 1 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  uint64 gas_limit = 2;
  string payer     = 3 [(scalar) = "cosmos.AddressString"];
  string granter   = 4 [(scalar) = "cosmos.AddressString"];
}

message Tip {
  repeated Coin amount = 1 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string        tipper = 2 [(scalar) = "cosmos.AddressString"];
}

message Coin {
  option (gogoproto.equal) = true;

  string denom  = 1;
  string amount = 2 [(scalar) = "cosmos.Int", (gogoproto.customtype) = "Int", (gogoproto.nullable) = false];
}

message Any {
  string type_url = 1;
  bytes  value    = 2;
}

message PubKey {
  bytes key = 1;
}

enum State {
  STATE_UNINITIALIZED_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "UNINITIALIZED"];
  STATE_INIT                      = 1 [(gogoproto.enumvalue_customname) = "INIT"];
  STATE_TRYOPEN                   = 2 [(gogoproto.enumvalue_customname) = "TRYOPEN"];
  STATE_OPEN                      = 3 [(gogoproto.enumvalue_customname) = "OPEN"];
  STATE_CLOSED                    = 4 [(gogoproto.enumvalue_customname) = "CLOSED"];
}

enum Order {
  ORDER_NONE_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "NONE"];
  ORDER_UNORDERED        = 1 [(gogoproto.enumvalue_customname) = "UNORDERED"];
  ORDER_ORDERED          = 2 [(gogoproto.enumvalue_customname) = "ORDERED"];
}

enum VoteOption {
  VOTE_OPTION_UNSPECIFIED  = 0 [(gogoproto.enumvalue_customname) = "OptionEmpty"];
  VOTE_OPTION_YES          = 1 [(gogoproto.enumvalue_customname) = "OptionYes"];
  VOTE_OPTION_ABSTAIN      = 2 [(gogoproto.enumvalue_customname) = "OptionAbstain"];
  VOTE_OPTION_NO           = 3 [(gogoproto.enumvalue_customname) = "OptionNo"];
  VOTE_OPTION_NO_WITH_VETO = 4 [(gogoproto.enumvalue_customname) = "OptionNoWithVeto"];
}

message MsgSend {
  string        from_address = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string        to_address   = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  repeated Coin amount = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message MsgMultiSend {
  repeated Input  inputs  = 1 [(gogoproto.nullable) = false];
  repeated Output outputs = 2 [(gogoproto.nullable) = false];
}

message MsgVerifyInvariant {
  string sender                = 1;
  string invariant_module_name = 2 [(gogoproto.moretags) = "yaml:\"invariant_module_name\""];
  string invariant_route       = 3 [(gogoproto.moretags) = "yaml:\"invariant_route\""];
}

message MsgSetWithdrawAddress {
  string delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string withdraw_address  = 2 [(gogoproto.moretags) = "yaml:\"withdraw_address\""];
}

message MsgWithdrawDelegatorReward {
  string delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string validator_address = 2 [(gogoproto.moretags) = "yaml:\"validator_address\""];
}

message MsgWithdrawValidatorCommission {
  string validator_address = 1 [(gogoproto.moretags) = "yaml:\"validator_address\""];
}

message MsgFundCommunityPool {
  repeated Coin amount = 1 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string        depositor = 2;
}

message MsgSubmitEvidence {
  string submitter = 1;
  Any    evidence  = 2 [(accepts_interface) = "Evidence"];
}

message MsgSubmitProposal {
  Any           content         = 1 [(accepts_interface) = "Content"];
  repeated Coin initial_deposit = 2 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"initial_deposit\""
  ];
  string proposer = 3;
}

message MsgVote {
  uint64     proposal_id = 1 [(gogoproto.jsontag) = "proposal_id", (gogoproto.moretags) = "yaml:\"proposal_id\""];
  string     voter       = 2;
  VoteOption option      = 3;
}

message MsgDeposit {
  uint64        proposal_id = 1 [(gogoproto.jsontag) = "proposal_id", (gogoproto.moretags) = "yaml:\"proposal_id\""];
  string        depositor   = 2;
  repeated Coin amount = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message MsgUnjail {
  string validator_addr = 1 [(gogoproto.moretags) = "yaml:\"address\"", (gogoproto.jsontag) = "address"];
}

message MsgCreateValidator {
  Description     description         = 1 [(gogoproto.nullable) = false];
  CommissionRates commission          = 2 [(gogoproto.nullable) = false];
  string          min_self_delegation = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags)   = "yaml:\"min_self_delegation\"",
    (gogoproto.nullable)   = false
  ];
  string delegator_address = 4 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string validator_address = 5 [(gogoproto.moretags) = "yaml:\"validator_address\""];
  Any    pubkey            = 6 [(accepts_interface) = "cosmos.crypto.PubKey"];
  Coin   value             = 7 [(gogoproto.nullable) = false];
}

message MsgEditValidator {
  Description description       = 1 [(gogoproto.nullable) = false];
  string      validator_address = 2 [(gogoproto.moretags) = "yaml:\"address\""];
  string      commission_rate   = 3
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.moretags) = "yaml:\"commission_rate\""];
  string min_self_delegation = 4
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.moretags) = "yaml:\"min_self_delegation\""];
}

message MsgDelegate {
  string delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string validator_address = 2 [(gogoproto.moretags) = "yaml:\"validator_address\""];
  Coin   amount            = 3 [(gogoproto.nullable) = false];
}

message MsgBeginRedelegate {
  string delegator_address     = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string validator_src_address = 2 [(gogoproto.moretags) = "yaml:\"validator_src_address\""];
  string validator_dst_address = 3 [(gogoproto.moretags) = "yaml:\"validator_dst_address\""];
  Coin   amount                = 4 [(gogoproto.nullable) = false];
}

message MsgUndelegate {
  string delegator_address = 1 [(gogoproto.moretags) = "yaml:\"delegator_address\""];
  string validator_address = 2 [(gogoproto.moretags) = "yaml:\"validator_address\""];
  Coin   amount            = 3 [(gogoproto.nullable) = false];
}

message MsgCreateVestingAccount {
  string from_address = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string to_address   = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  Coin   amount       = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  int64  end_time     = 4 [(gogoproto.moretags) = "yaml:\"end_time\""];
  bool   delayed      = 5;
}

message MsgTransfer {
  string source_port       = 1 [(gogoproto.moretags) = "yaml:\"source_port\""];
  string source_channel    = 2 [(gogoproto.moretags) = "yaml:\"source_channel\""];
  Coin   token             = 3 [(gogoproto.nullable) = false];
  string sender            = 4;
  string receiver          = 5;
  Height timeout_height    = 6 [(gogoproto.moretags) = "yaml:\"timeout_height\"", (gogoproto.nullable) = false];
  uint64 timeout_timestamp = 7 [(gogoproto.moretags) = "yaml:\"timeout_timestamp\""];
}

message MsgChannelOpenInit {
  string  port_id = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  Channel channel = 2 [(gogoproto.nullable) = false];
  string  signer  = 3;
}

message MsgChannelOpenTry {
  string  port_id              = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string  previous_channel_id  = 2 [(gogoproto.moretags) = "yaml:\"previous_channel_id\""];
  Channel channel              = 3 [(gogoproto.nullable) = false];
  string  counterparty_version = 4 [(gogoproto.moretags) = "yaml:\"counterparty_version\""];
  bytes   proof_init           = 5 [(gogoproto.moretags) = "yaml:\"proof_init\""];
  Height  proof_height         = 6 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string  signer               = 7;
}

message MsgChannelOpenAck {
  string port_id                 = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id              = 2 [(gogoproto.moretags) = "yaml:\"channel_id\""];
  string counterparty_channel_id = 3 [(gogoproto.moretags) = "yaml:\"counterparty_channel_id\""];
  string counterparty_version    = 4 [(gogoproto.moretags) = "yaml:\"counterparty_version\""];
  bytes  proof_try               = 5 [(gogoproto.moretags) = "yaml:\"proof_try\""];
  Height proof_height            = 6 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string signer                  = 7;
}

message MsgChannelOpenConfirm {
  string port_id      = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id   = 2 [(gogoproto.moretags) = "yaml:\"channel_id\""];
  bytes  proof_ack    = 3 [(gogoproto.moretags) = "yaml:\"proof_ack\""];
  Height proof_height = 4 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string signer       = 5;
}

message MsgChannelCloseInit {
  string port_id    = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id = 2 [(gogoproto.moretags) = "yaml:\"channel_id\""];
  string signer     = 3;
}

message MsgChannelCloseConfirm {
  string port_id      = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id   = 2 [(gogoproto.moretags) = "yaml:\"channel_id\""];
  bytes  proof_init   = 3 [(gogoproto.moretags) = "yaml:\"proof_init\""];
  Height proof_height = 4 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string signer       = 5;
}

message MsgRecvPacket {
  Packet packet           = 1 [(gogoproto.nullable) = false];
  bytes  proof_commitment = 2 [(gogoproto.moretags) = "yaml:\"proof_commitment\""];
  Height proof_height     = 3 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string signer           = 4;
}

message MsgTimeout {
  Packet packet             = 1 [(gogoproto.nullable) = false];
  bytes  proof_unreceived   = 2 [(gogoproto.moretags) = "yaml:\"proof_unreceived\""];
  Height proof_height       = 3 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  uint64 next_sequence_recv = 4 [(gogoproto.moretags) = "yaml:\"next_sequence_recv\""];
  string signer             = 5;
}

message MsgTimeoutOnClose {
  Packet packet             = 1 [(gogoproto.nullable) = false];
  bytes  proof_unreceived   = 2 [(gogoproto.moretags) = "yaml:\"proof_unreceived\""];
  bytes  proof_close        = 3 [(gogoproto.moretags) = "yaml:\"proof_close\""];
  Height proof_height       = 4 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  uint64 next_sequence_recv = 5 [(gogoproto.moretags) = "yaml:\"next_sequence_recv\""];
  string signer             = 6;
}

message MsgAcknowledgement {
  Packet packet          = 1 [(gogoproto.nullable) = false];
  bytes  acknowledgement = 2;
  bytes  proof_acked     = 3 [(gogoproto.moretags) = "yaml:\"proof_acked\""];
  Height proof_height    = 4 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string signer          = 5;
}

message MsgCreateClient {
  Any    client_state    = 1 [(gogoproto.moretags) = "yaml:\"client_state\""];
  Any    consensus_state = 2 [(gogoproto.moretags) = "yaml:\"consensus_state\""];
  string signer          = 3;
}

message MsgUpdateClient {
  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  Any    header    = 2;
  string signer    = 3;
}

message MsgUpgradeClient {
  string client_id                     = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  Any    client_state                  = 2 [(gogoproto.moretags) = "yaml:\"client_state\""];
  Any    consensus_state               = 3 [(gogoproto.moretags) = "yaml:\"consensus_state\""];
  bytes  proof_upgrade_client          = 4 [(gogoproto.moretags) = "yaml:\"proof_upgrade_client\""];
  bytes  proof_upgrade_consensus_state = 5 [(gogoproto.moretags) = "yaml:\"proof_upgrade_consensus_state\""];
  string signer                        = 6;
}

message MsgSubmitMisbehaviour {
  string client_id    = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  Any    misbehaviour = 2;
  string signer       = 3;
}

message MsgConnectionOpenInit {
  string                 client_id    = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  ConnectionCounterparty counterparty = 2 [(gogoproto.nullable) = false];
  ConnectionVersion      version      = 3;
  uint64                 delay_period = 4 [(gogoproto.moretags) = "yaml:\"delay_period\""];
  string                 signer       = 5;
}

message MsgConnectionOpenTry {
  string                     client_id              = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  string                     previous_connection_id = 2 [(gogoproto.moretags) = "yaml:\"previous_connection_id\""];
  Any                        client_state           = 3 [(gogoproto.moretags) = "yaml:\"client_state\""];
  ConnectionCounterparty     counterparty           = 4 [(gogoproto.nullable) = false];
  uint64                     delay_period           = 5 [(gogoproto.moretags) = "yaml:\"delay_period\""];
  repeated ConnectionVersion counterparty_versions  = 6 [(gogoproto.moretags) = "yaml:\"counterparty_versions\""];
  Height                     proof_height    = 7 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  bytes                      proof_init      = 8 [(gogoproto.moretags) = "yaml:\"proof_init\""];
  bytes                      proof_client    = 9 [(gogoproto.moretags) = "yaml:\"proof_client\""];
  bytes                      proof_consensus = 10 [(gogoproto.moretags) = "yaml:\"proof_consensus\""];
  Height consensus_height = 11 [(gogoproto.moretags) = "yaml:\"consensus_height\"", (gogoproto.nullable) = false];
  string signer           = 12;
}

message MsgConnectionOpenAck {
  string            connection_id              = 1 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string            counterparty_connection_id = 2 [(gogoproto.moretags) = "yaml:\"counterparty_connection_id\""];
  ConnectionVersion version                    = 3;
  Any               client_state               = 4 [(gogoproto.moretags) = "yaml:\"client_state\""];
  Height            proof_height               = 5 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  bytes             proof_try                  = 6 [(gogoproto.moretags) = "yaml:\"proof_try\""];
  bytes             proof_client               = 7 [(gogoproto.moretags) = "yaml:\"proof_client\""];
  bytes             proof_consensus            = 8 [(gogoproto.moretags) = "yaml:\"proof_consensus\""];
  Height            consensus_height = 9 [(gogoproto.moretags) = "yaml:\"consensus_height\"", (gogoproto.nullable) = false];
  string            signer           = 10;
}

message MsgConnectionOpenConfirm {
  string connection_id = 1 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  bytes  proof_ack     = 2 [(gogoproto.moretags) = "yaml:\"proof_ack\""];
  Height proof_height  = 3 [(gogoproto.moretags) = "yaml:\"proof_height\"", (gogoproto.nullable) = false];
  string signer        = 4;
}

message Channel {
  State               state           = 1;
  Order               ordering        = 2;
  ChannelCounterparty counterparty    = 3 [(gogoproto.nullable) = false];
  repeated string     connection_hops = 4 [(gogoproto.moretags) = "yaml:\"connection_hops\""];
  string              version         = 5;
}

message ChannelCounterparty {
  string port_id    = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id = 2 [(gogoproto.moretags) = "yaml:\"channel_id\""];
}

message CommissionRates {
  string rate     = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string max_rate = 2 [
    (gogoproto.moretags)   = "yaml:\"max_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  string max_change_rate = 3 [
    (gogoproto.moretags)   = "yaml:\"max_change_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}

message ConnectionCounterparty {
  string       client_id     = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  string       connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  MerklePrefix prefix        = 3 [(gogoproto.nullable) = false];
}

message ConnectionVersion {
  string          identifier = 1;
  repeated string features   = 2;
}

message Description {
  string moniker          = 1;
  string identity         = 2;
  string website          = 3;
  string security_contact = 4 [(gogoproto.moretags) = "yaml:\"security_contact\""];
  string details          = 5;
}

message Height {
  uint64 revision_number = 1 [(gogoproto.moretags) = "yaml:\"revision_number\""];
  uint64 revision_height = 2 [(gogoproto.moretags) = "yaml:\"revision_height\""];
}

message Input {
  string        address = 1;
  repeated Coin coins   = 2 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message Output {
  string        address = 1;
  repeated Coin coins   = 2 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message MerklePrefix {
  bytes key_prefix = 1 [(gogoproto.moretags) = "yaml:\"key_prefix\""];
}

message Packet {
  uint64 sequence            = 1;
  string source_port         = 2 [(gogoproto.moretags) = "yaml:\"source_port\""];
  string source_channel      = 3 [(gogoproto.moretags) = "yaml:\"source_channel\""];
  string destination_port    = 4 [(gogoproto.moretags) = "yaml:\"destination_port\""];
  string destination_channel = 5 [(gogoproto.moretags) = "yaml:\"destination_channel\""];
  bytes  data                = 6;
  Height timeout_height      = 7 [(gogoproto.moretags) = "yaml:\"timeout_height\"", (gogoproto.nullable) = false];
  uint64 timeout_timestamp   = 8 [(gogoproto.moretags) = "yaml:\"timeout_timestamp\""];
}

message CosmosHeader {
  t.v1.SignedHeader signed_header      = 1 [(gogoproto.embed) = true, (gogoproto.moretags) = "yaml:\"signed_header\""];
  t.v1.ValidatorSet validator_set      = 2 [(gogoproto.moretags) = "yaml:\"validator_set\""];
  Height            trusted_height     = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"trusted_height\""];
  t.v1.ValidatorSet trusted_validators = 4 [(gogoproto.moretags) = "yaml:\"trusted_validators\""];
}

extend google.protobuf.MessageOptions {
  string implements_interface = 93001;
}

extend google.protobuf.FieldOptions {
  string accepts_interface = 93001;
  string scalar            = 93002;
}
